{"version":3,"sources":["webpack:///src/app/content-item/content-item.component.html","webpack:///src/app/content-item/content-item.component.ts","webpack:///src/app/providers/auth.service.ts","webpack:///src/app/providers/backend.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/providers/host-config.rovider.ts","webpack:///src/app/providers/filter.service.ts","webpack:///src/app/file-upload/file-upload.component.ts","webpack:///src/app/file-upload/file-upload.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pinboard/pinboard.component.html","webpack:///src/app/pinboard/pinboard.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/pinboard/pinboard.service.ts","webpack:///src/app/create-content-item/create-content-item.component.ts","webpack:///src/app/create-content-item/create-content-item.component.html","webpack:///src/app/providers/auth.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/pinboard/filter-item.pipe.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ContentItemComponent","AuthService","router","isAuthenticate","readFromLocalStorage","user","password","writeToLocalStorage","isLoggedIn","goToHomePage","localStorage","setItem","getItem","navigate","BackendService","observItemList","itemList","next","id","title","imgLink","text","item","console","log","newItem","deletePost","addPost","tempItem","getAllPosts","subscribe","find","environment","production","HostConfigProvider","httpClient","config","apiUrl","undefined","jsonFile","get","toPromise","FilterService","filterValue","filter","ALLOWED_TYPE","FileUploadComponent","onFileUploaded","fileName","event","file","target","files","type","split","name","emit","onFileSelected","AppComponent","NUMBER_OF_COLUMNS","PinboardComponent","pinboardService","filterService","getItemListFromApi","getContentItems","receivedItemList","forEach","receivedItem","rowCount","Math","round","itemsInRows","Array","rowNumber","push","getRow","row","colNumber","itemsInColumns","getColumn","col","configFactory","hostConfigProvider","loadConfig","AppModule","provide","useFactory","deps","multi","HeaderComponent","authService","applyFilter","logout","goToLoginPage","performLogout","PinboardService","backendService","CreateContentItemComponent","fileAsString","getBase64","value","me","reader","FileReader","readAsDataURL","onload","result","onerror","error","fileUploaded","createNewPost","AuthGuard","state","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","relativeLinkResolution","LoginComponent","username","checkLogin","warn","login","setErrors","required","performLogin","FilterItemPipe","toLowerCase","includes","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACE;;;;;;AAAK;;;;;;AAEH;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAGF;;AAAyC;;AAAa;;;;;;AAAb;;AAAA;;;;UCChCA,oB;AAGX,wCAAc;AAAA;AACb;;;;iBAED,oBAAQ,CACP;;;;;;;yBAPUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,4R;AAAA;AAAA;ADRjC;;AACE;;AACA;;AACE;;AAGA;;AAAyB;;AAAQ;;AACjC;;AACF;;AACF;;;;AAR8D;;AAAA;;AAElC;;AAAA;;AAIF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEDbC,W;AAGX,6BACUC,MADV,EACwB;AAAA;;AAAd,eAAAA,MAAA,GAAAA,MAAA;AAHF,eAAAC,cAAA,GAAiB,KAAjB;AAKN,eAAKC,oBAAL;AACD;;;;iBAED,eAAMC,IAAN,EAAoBC,QAApB,EAAoC;AAClC,gBAAID,IAAI,KAAK,OAAT,IAAoBC,QAAQ,KAAK,OAArC,EAA8C;AAC5C,mBAAKH,cAAL,GAAsB,IAAtB;AACA,mBAAKI,mBAAL;AACA,qBAAO,KAAKJ,cAAZ;AACD;;AACD,iBAAKA,cAAL,GAAsB,KAAtB;AACA,mBAAO,KAAKA,cAAZ;AACD;;;iBAED,kBAAM;AACJ,gBAAI,KAAKK,UAAL,EAAJ,EAAsB;AACpB,mBAAKL,cAAL,GAAsB,KAAtB;AACA,mBAAKI,mBAAL;AACA,mBAAKE,YAAL;AACA,qBAAO,IAAP;AACD,aALD,MAKO;AACL,qBAAO,KAAP;AACD;AACF;;;iBAED,sBAAU;AACR,iBAAKL,oBAAL;AACA,mBAAO,KAAKD,cAAZ;AACD;;;iBAED,+BAAmB;AACjBO,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,KAAI,KAAKR,cAAtC;AACD;;;iBAED,gCAAoB;AAClB,iBAAKA,cAAL,GAAuBO,YAAY,CAACE,OAAb,CAAqB,MAArB,MAAiC,MAAxD;AACD;;;iBAEO,wBAAe;AACrB,iBAAKV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;;;iBACM,yBAAa;AAClB,iBAAKX,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;yBAhDUZ,W,EAAW,8G;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;ACFd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaa,c;AAOX;AAAA;;AAAA;;AAJA,eAAAC,cAAA,GAAiB,IAAI,+CAAJ,CAAuB,UAACC,QAAD,EAAc;AACpDA,oBAAQ,CAACC,IAAT,CAAc,KAAI,CAACD,QAAnB;AACD,WAFgB,CAAjB;AAQE,eAAKA,QAAL,GAAgB,CACd;AACEE,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,EAHX;AAIEC,gBAAI,EAAE;AAJR,WADc,EAOd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,EAHX;AAIEC,gBAAI,EAAE;AAJR,WAPc,EAad;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,EAHX;AAIEC,gBAAI,EAAE;AAJR,WAbc,EAmBd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,EAHX;AAIEC,gBAAI,EAAE;AAJR,WAnBc,EAyBd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,0IAHX;AAIEC,gBAAI,EAAE;AAJR,WAzBc,EA+Bd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEC,mBAAO,EAAE,EAHX;AAIEC,gBAAI,EAAE;AAJR,WA/Bc,EAqCd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEE,gBAAI,EAAE;AAHR,WArCc,EA0Cd;AACEH,cAAE,EAAE,GADN;AAEEC,iBAAK,EAAE,QAFT;AAGEE,gBAAI,EAAE;AAHR,WA1Cc,CAAhB;AAgDD;;;;iBAED,iBAAQC,IAAR,EAAkB;AAChBA,gBAAI,CAACJ,EAAL,GAAU,gBAAV;AACAK,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACA,mBAAO,mBAAP;AACD;;;iBAED,oBAAWJ,EAAX,EAAqB;AACnBK,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,EAA7B;AACA,mBAAO,IAAP;AACD;;;iBAED,kBAASA,EAAT,EAAqBO,OAArB,EAAkC;AAChCA,mBAAO,CAACP,EAAR,GAAaA,EAAb;;AACA,gBAAG,KAAKQ,UAAL,CAAgBR,EAAhB,CAAH,EAAuB;AACrB,kBAAG,KAAKS,OAAL,CAAaF,OAAb,CAAH,EAAyB;AACvBF,uBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,EAA7B;AACA,uBAAO,IAAP;AACD;AACF;;AACD,mBAAO,KAAP;AACD;;;iBAED,uBAAW;AACT,mBAAO,KAAKH,cAAZ;AACD;;;iBAED,qBAAYG,EAAZ,EAAqB;AAAA;;AACnB,gBAAIU,QAAQ,GAAG,EAAf;AACA,iBAAKC,WAAL,GAAmBC,SAAnB,CAA6B,UAACd,QAAD,EAAa;AACxCY,sBAAQ,GAAG,MAAI,CAACZ,QAAL,CAAce,IAAd,CAAmB,UAACT,IAAD;AAAA,uBAASA,IAAI,CAACJ,EAAL,KAAYA,EAArB;AAAA,eAAnB,CAAX;AACD,aAFD;AAGA,mBAAOU,QAAP;AACD;;;;;;;yBA7FUd,c;AAAc,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMkB,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXaC,kB;AAOX,oCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AALZ,eAAAC,MAAA,GAAqB;AAC3BC,kBAAM,EAAEC;AADmB,WAArB;AAMP;;;;iBACD,qBAAS;AACP,mBAAO,KAAKF,MAAL,CAAYC,MAAnB;AACD;;;iBAEK,sBAAU;;;;;;;AACRE,8B,GAAW,qB;;AACH,6BAAM,KAAKJ,UAAL,CAAgBK,GAAhB,CAAgCD,QAAhC,EAA0CE,SAA1C,EAAN;;;AAAd,2BAAKL,M;;;;;;;;;AACN;;;;;;;yBAhBUF,kB,EAAkB,uH;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBADN;;;;;;;;;;;;;;;;;ACFzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaQ,a;AAGX,iCAAc;AAAA;;AAFd,eAAAC,WAAA,GAAc,IAAI,oDAAJ,CAA4B,EAA5B,CAAd;AAEiB;;;;iBAEjB,qBAAYC,MAAZ,EAA4B;AAC1B,iBAAKA,MAAL,CAAY3B,IAAZ,CAAiB2B,MAAjB;AACD;;;eAED,eAAa;AACX,mBAAO,KAAKD,WAAZ;AACD;;;;;;;yBAXUD,a;AAAa,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;;;;;;;;;;;;;ACJd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAMG,YAAY,GAAG,OAArB;;UAOaC,mB;AAKX,uCAAc;AAAA;;AAHJ,eAAAC,cAAA,GAAiB,IAAI,0DAAJ,EAAjB;AACV,eAAAC,QAAA,GAAW,EAAX;AAEiB;;;;iBAEjB,oBAAQ,CACP;;;iBAED,wBAAeC,KAAf,EAAsB;AACpB,gBAAMC,IAAI,GAAQD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;;AACA,gBAAIF,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,MAA4BT,YAAhC,EAA8C;AAC5C,mBAAKG,QAAL,GAAgBE,IAAI,CAACK,IAArB;AACA,mBAAKR,cAAL,CAAoBS,IAApB,CAAyBN,IAAzB;AACD;AACF;;;;;;;yBAhBUJ,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,yL;AAAA;AAAA;;;ACThC;;AACO;AAAA,qBAAU,IAAAW,cAAA,QAAV;AAAgC,aAAhC;;AADP;;AAEA;;AAEE;;AACQ;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAA2B,aAA3B;;AACN;;AAAU;;AAAW;;AACvB;;AAEA;;AAEF;;;;AAFE;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFWC,Y,GALb;AAAA;;AAME,aAAAvC,KAAA,GAAQ,SAAR;AACD,O;;;yBAFYuC,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;AACE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAM;;AACE;;AACE;;AACF;;AACF;;;;;;AAFsB;;AAAA;;;;;;AAHxB;;AACE;;AAKF;;;;;;AALoC;;AAAA;;;;ACGxC,UAAMC,iBAAiB,GAAG,CAA1B;;UAOaC,iB;AAIX,mCACUC,eADV,EAEUC,aAFV,EAEsC;AAAA;;AAD5B,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAET;;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKC,kBAAL;AACA,iBAAKD,aAAL,CAAmBlB,MAAnB,CAA0Bd,SAA1B,CAAoC,UAACa,WAAD,EAAgB;AAClD,oBAAI,CAACC,MAAL,GAAcD,WAAd;AACD,aAFD;AAGD;;;iBAED,qBAAYzB,EAAZ,EAAsB;AACpB,gBAAII,IAAI,GAAG,EAAX;AACA,iBAAKuC,eAAL,CAAqBG,eAArB,GAAuClC,SAAvC,CAAiD,UAACmC,gBAAD,EAA8B;AAC7EA,8BAAgB,CAACC,OAAjB,CAAyB,UAACC,YAAD,EAAwB;AAC/C,oBAAIA,YAAY,CAACjD,EAAb,KAAoBA,EAAxB,EAA4B;AAC1BI,sBAAI,GAAG6C,YAAP;AACD;AACF,eAJD;AAKD,aAND;AAOA,mBAAO7C,IAAP;AACD;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAKuC,eAAL,CAAqBG,eAArB,GAAuClC,SAAvC,CAAiD,UAACmC,gBAAD,EAA8B;AAC7E,oBAAI,CAACjD,QAAL,GAAgBiD,gBAAhB;AACD,aAFD;AAGD;;;iBAED,oBAAQ;AACN,gBAAIG,QAAQ,GAAG,CAAf;AACA,iBAAKpD,QAAL,CAAckD,OAAd,CAAsB,UAAC5C,IAAD,EAAgB;AACpC8C,sBAAQ;AACT,aAFD;AAGAA,oBAAQ,GAAGC,IAAI,CAACC,KAAL,CAAYF,QAAQ,GAAGT,iBAAvB,CAAX;AACA,mBAAOS,QAAP;AACD;;;iBAED,mBAAO;AACL,gBAAIG,WAAW,GAAG,IAAIC,KAAJ,EAAlB;;AACA,iBAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAG,KAAKL,QAAL,EAApC,EAAqDK,SAAS,EAA9D,EAAkE;AAChEF,yBAAW,CAACG,IAAZ,CAAiB,KAAKC,MAAL,CAAYF,SAAZ,CAAjB;AACD;;AACD,mBAAOF,WAAP;AACD;;;iBAED,gBAAOE,SAAP,EAAwB;AACtB,gBAAIG,GAAG,GAAG,EAAV;;AACA,iBAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGlB,iBAApC,EAAuDkB,SAAS,EAAhE,EAAoE;AAClE,kBAAI,CAAC,CAAC,KAAK7D,QAAL,CAAeyD,SAAS,GAAG,CAAb,GAAkBI,SAAhC,CAAN,EAAkD;AAChDD,mBAAG,CAACF,IAAJ,CAAS,KAAK1D,QAAL,CAAeyD,SAAS,GAAG,CAAb,GAAkBI,SAAhC,CAAT;AACD;AACF;;AACD,mBAAOD,GAAP;AACD;;;iBAED,oBAAW5D,QAAX,EAA2B;AACzB,gBAAI8D,cAAc,GAAG,IAAIN,KAAJ,EAArB;;AACA,iBAAK,IAAIK,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGlB,iBAApC,EAAuDkB,SAAS,EAAhE,EAAoE;AAClEC,4BAAc,CAACJ,IAAf,CAAoB,KAAKK,SAAL,CAAe/D,QAAf,EAAyB6D,SAAzB,CAApB;AACD;;AACD,mBAAOC,cAAP;AACD;;;iBAED,mBAAU9D,QAAV,EAA2B6D,SAA3B,EAA4C;AAC1C,gBAAIG,GAAG,GAAG,EAAV;;AACA,iBAAK,IAAIP,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAG,KAAKL,QAAL,EAApC,EAAqDK,SAAS,EAA9D,EAAkE;AAChE,kBAAI,CAAC,CAACzD,QAAQ,CAAEyD,SAAS,GAAG,CAAb,GAAkBI,SAAnB,CAAd,EAA6C;AAC3CG,mBAAG,CAACN,IAAJ,CAAS1D,QAAQ,CAAEyD,SAAS,GAAG,CAAb,GAAkBI,SAAnB,CAAjB;AACD;AACF;;AACD,mBAAOG,GAAP;AACD;;;;;;;yBA9EUpB,iB,EAAiB,kI,EAAA,wI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA,8L;AAAA;AAAA;ADb9B;;AACE;;AACE;;;;AAOF;;AACF;;;;AARuC;;AAAA;;;;;;;;;;;;;;;;;;;;;;AEFvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAuBO,eAASqB,aAAT,CAAuBC,kBAAvB,EAA+D;AACpE,eAAO;AAAA,iBAAMA,kBAAkB,CAACC,UAAnB,EAAN;AAAA,SAAP;AACD;;UAkCYC,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,2DAEQ;;;mBAVT,CACT;AACEC,iBAAO,EAAE,6DADX;AAEEC,oBAAU,EAAEL,aAFd;AAGEM,cAAI,EAAE,CAAC,kFAAD,CAHR;AAIEC,eAAK,EAAE;AAJT,SADS,C;AAOV,kBAlBQ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,oEALO,EAMP,sEANO,EAOP,yEAPO,EAQP,mEARO,EASP,2DATO,CAkBR;;;;4HAGUJ,S,EAAS;AAAA,yBA9BlB,2DA8BkB,EA7BlB,yFA6BkB,EA5BlB,8EA4BkB,EA3BlB,wEA2BkB,EA1BlB,sEA0BkB,EAzBlB,8GAyBkB,EAxBlB,0EAwBkB,EAvBlB,uFAuBkB;AAvBC,oBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,4FALmB,EAMnB,sEANmB,EAOnB,oEAPmB,EAQnB,sEARmB,EASnB,yEATmB,EAUnB,mEAVmB,EAWnB,2DAXmB;AAuBD,S;AAZP,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtCFK,e;AACX,iCACUC,WADV,EAEU5B,aAFV,EAEsC;AAAA;;AAD5B,eAAA4B,WAAA,GAAAA,WAAA;AACA,eAAA5B,aAAA,GAAAA,aAAA;AACL;;;;iBAEL,oBAAQ,CACP;;;iBAED,qBAAYlB,MAAZ,EAA0B;AACxB,iBAAKkB,aAAL,CAAmB6B,WAAnB,CAA+B/C,MAA/B;AACD;;;iBAED,yBAAa;AACX,gBAAG,CAAC,KAAK8C,WAAL,CAAiBE,MAAjB,EAAJ,EAA8B;AAC5B,mBAAKF,WAAL,CAAiBG,aAAjB;AACD;AACF;;;iBAED,oBAAQ;AACN,mBAAO,KAAKH,WAAL,CAAiBlF,UAAjB,EAAP;AACD;;;;;;;yBArBUiF,e,EAAe,oI,EAAA,wI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,mkB;AAAA;AAAA;;;ACT5B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2D;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,WAAA,WAAT;AAAqC,aAArC;;AAA3D;;AACA;;AACU;AAAA;;AAAA;;AAAS;;AAAwB,yBAAAA,WAAA,CAAY,EAAZ;AAAe,aAAhD;;AAAmD;;AAC7D;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAAmC;AAAA,qBAAS,IAAAG,aAAA,EAAT;AAAwB,aAAxB;;AACjC;;AACE;;AACF;;AACA;;AAAyB;;AAAM;;AACjC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAhC4B;;AAAA;;AAOiC;;AAAA;;AASnB;;AAAA,0JAAsB,QAAtB,EAAsB,eAAtB;;AAMlB;;AAAA;;AAGP;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrBJC,e;AAGX,iCACUC,cADV,EACwC;AAAA;;AAA9B,eAAAA,cAAA,GAAAA,cAAA;AAGT;;;;iBAEM,2BAAe;AACpB,mBAAO,KAAKA,cAAL,CAAoBnE,WAApB,EAAP;AACD;;;;;;;yBAXUkE,e,EAAe,iI;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACPd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaE,0B;AAKX,4CACUD,cADV,EACwC;AAAA;;AAA9B,eAAAA,cAAA,GAAAA,cAAA;AALV,eAAA7E,KAAA,GAAQ,IAAI,0DAAJ,EAAR;AACA,eAAAE,IAAA,GAAO,IAAI,0DAAJ,EAAP;AAKK;;;;iBAEL,oBAAQ,CACP;;;iBAED,sBAAa6B,IAAb,EAAyB;AACvB3B,mBAAO,CAACC,GAAR,CAAY0B,IAAZ;AACA,iBAAKgD,YAAL,GAAoB,KAAKC,SAAL,CAAejD,IAAf,CAApB;AACD;;;iBAED,yBAAa;AACX,gBAAM5B,IAAI,GAAG,EAAb;AACAA,gBAAI,CAACJ,EAAL,GAAQ,EAAR;AACAI,gBAAI,CAACH,KAAL,GAAa,KAAKE,IAAL,CAAU+E,KAAvB;AACA9E,gBAAI,CAACD,IAAL,GAAY,KAAKA,IAAL,CAAU+E,KAAtB;AACA9E,gBAAI,CAACF,OAAL,GAAe,KAAK8E,YAApB;AACA,iBAAKF,cAAL,CAAoBrE,OAApB,CAA4BL,IAA5B;AACD;;;iBACD,mBAAU4B,IAAV,EAAc;AACZ,gBAAImD,EAAE,GAAG,IAAT;AACA,gBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,gBAAIL,YAAY,GAAW,EAA3B;AACAI,kBAAM,CAACE,aAAP,CAAqBtD,IAArB;;AACAoD,kBAAM,CAACG,MAAP,GAAgB,YAAY;AAC1BP,0BAAY,GAAGI,MAAM,CAACI,MAAtB;AACD,aAFD;;AAGAJ,kBAAM,CAACK,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAChCrF,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBoF,KAAvB;AACA,qBAAO,EAAP;AACD,aAHD;;AAIA,mBAAOV,YAAP;AACD;;;;;;;yBAtCUD,0B,EAA0B,0I;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA,iB;AAAA,e;AAAA,mf;AAAA;AAAA;ACVvC;;AACE;;AACE;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAiB;AAAA,qBAAkB,IAAAY,YAAA,QAAlB;AAAsC,aAAtC;;AAAwC;;AAC3D;;AACA;;AACE;;AAAmC;AAAA,qBAAS,IAAAC,aAAA,EAAT;AAAwB,aAAxB;;AACjC;;AACF;;AACF;;AACF;;AACF;;AACA;;AACF;;AACF;;;;AApB2D;;AAAA;;AAKQ;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCVtDC,S;AACX,2BACUrB,WADV,EAEUxF,MAFV,EAEwB;AAAA;;AADd,eAAAwF,WAAA,GAAAA,WAAA;AACA,eAAAxF,MAAA,GAAAA,MAAA;AAET;;;;iBAED,qBACEe,IADF,EAEE+F,KAFF,EAE4B;AAC1B,gBAAI,KAAKtB,WAAL,CAAiBlF,UAAjB,EAAJ,EAAmC;AACjC,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,mBAAKN,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,qBAAO,KAAP;AACD;AACF;;;;;;;yBAhBUkG,S,EAAS,iH,EAAA,8G;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAME,MAAM,GAAW,CACrB;AAACC,YAAI,EAAE,OAAP;AAAgBC,iBAAS,EAAE;AAA3B,OADqB,EAErB;AAACD,YAAI,EAAE,EAAP;AAAWC,iBAAS,EAAE;AAAtB,OAFqB,EAGrB;AAACD,YAAI,EAAE,KAAP;AAAcC,iBAAS,EAAE,6GAAzB;AAAqDC,mBAAW,EAAE,CAAC,+DAAD;AAAlE,OAHqB,EAIrB;AAACF,YAAI,EAAE,IAAP;AAAaG,kBAAU,EAAE;AAAzB,OAJqB,CAAvB;;UAWaC,gB;;;;;yBAAAA,gB;AAAgB,O;;;cAAhBA;;;kBAHF,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,EAA6B;AAAEO,gCAAsB,EAAE;AAA1B,SAA7B,CAAD,C,EACC,4D;;;;4HAECF,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;AChBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaG,c;AAKX,gCACU/B,WADV,EAEUxF,MAFV,EAEwB;AAAA;;AADd,eAAAwF,WAAA,GAAAA,WAAA;AACA,eAAAxF,MAAA,GAAAA,MAAA;AANV,eAAAwH,QAAA,GAAW,IAAI,0DAAJ,EAAX;AACA,eAAApH,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAMK;;;;iBAEL,oBAAQ,CACP;;;iBAED,wBAAe;AACb,gBAAG,KAAKqH,UAAL,EAAH,EAAqB;AACnB,mBAAKzH,MAAL,CAAYW,QAAZ,CAAqB,CAAC,KAAD,CAArB;AACD,aAFD,MAEO;AACL,mBAAK+G,IAAL;AACD;AACF;;;iBACD,sBAAU;AACR,mBAAO,KAAKlC,WAAL,CAAiBmC,KAAjB,CACL,KAAKH,QAAL,CAActB,KADT,EAEL,KAAK9F,QAAL,CAAc8F,KAFT,CAAP;AAID;;;iBAEO,gBAAO;AACb,iBAAKsB,QAAL,CAAcI,SAAd,CAAwB,0DAAWC,QAAnC;AACA,iBAAKzH,QAAL,CAAcwH,SAAd,CAAwB,0DAAWC,QAAnC;AACD;;;;;;;yBA9BUN,c,EAAc,oI,EAAA,uH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,4b;AAAA;AAAA;;;ACV3B;;AACE;;AACE;;AACA;;AACE;;AACE;;AACE;;AACE;;AACA;;AAA8E;AAAA;;AAAA;;AAAA,iCAA0B,EAA1B;AAA4B,aAA5B;;AAC5E;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA8E;AAAA;;AAAA;;AAAA,iCAA0B,EAA1B;AAA4B,aAA5B;;AAC5E;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmC;AAAA,qBAAS,IAAAO,YAAA,EAAT;AAAuB,aAAvB;;AACjC;;AAAU;;AAAW;;AACvB;;AACF;;AACF;;AACF;;AACA;;AACF;;AACF;;;;;;;;AAvBmD;;AAAA;;AACM;;AAAA;;AAOU;;AAAA;;AACV;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCV5CC,c;;;;;;;iBAEX,mBAAUjH,QAAV,EAA4B2B,WAA5B,EAA+C;AAC7C,gBAAG,EAAEA,WAAW,KAAK,EAAlB,CAAH,EAAyB;AACvBA,yBAAW,GAAGA,WAAW,CAACuF,WAAZ,EAAd;AACA,qBAAOlH,QAAQ,CAAC4B,MAAT,CAAgB,UAACtB,IAAD;AAAA,uBAAWA,IAAI,CAACH,KAAL,CAAW+G,WAAX,GAAyBC,QAAzB,CAAkCxF,WAAlC,CAAD,IAAqDrB,IAAI,CAACD,IAAL,CAAU6G,WAAV,GAAwBC,QAAxB,CAAiCxF,WAAjC,CAA/D;AAAA,eAAhB,CAAP;AACD;;AACD,mBAAO3B,QAAP;AACD;;;;;;;yBARUiH,c;AAAc,O;;;;cAAdA,c;AAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3B,UAAI,sEAAYhG,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBmG,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI9G,OAAO,CAACqF,KAAR,CAAcyB,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACpH,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["<div class=\"card\">\n  <img src=\"{{item.imgLink}}\" class=\"card-img\" alt='Picture' *ngIf=\"!!item.imgLink\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\" *ngIf=\"!!item.title\">\n      {{item.title}}\n    </h5>\n    <p class=\"card-subtitle\">hefbwief</p>\n    <p class=\"card-text\" *ngIf=\"!!item.text\">{{item.text}}</p>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Item} from \"./item\";\n\n@Component({\n  selector: 'app-content-item',\n  templateUrl: './content-item.component.html',\n  styleUrls: ['./content-item.component.scss']\n})\nexport class ContentItemComponent implements OnInit {\n  @Input() item: Item;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticate = false;\n\n  constructor(\n    private router: Router\n  ) {\n    this.readFromLocalStorage();\n  }\n\n  login(user: string, password: string): boolean {\n    if (user === 'admin' && password === 'admin') {\n      this.isAuthenticate = true;\n      this.writeToLocalStorage();\n      return this.isAuthenticate;\n    }\n    this.isAuthenticate = false;\n    return this.isAuthenticate;\n  }\n\n  logout(): boolean{\n    if (this.isLoggedIn()){\n      this.isAuthenticate = false;\n      this.writeToLocalStorage();\n      this.goToHomePage();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isLoggedIn():boolean{\n    this.readFromLocalStorage();\n    return this.isAuthenticate;\n  }\n\n  writeToLocalStorage(): void{\n    localStorage.setItem('auth', ''+ this.isAuthenticate);\n  }\n\n  readFromLocalStorage(): void{\n    this.isAuthenticate = (localStorage.getItem('auth') === 'true');\n  }\n\n  private goToHomePage() {\n    this.router.navigate(['']);\n  }\n  public goToLoginPage(): void{\n    this.router.navigate(['login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Item} from \"../content-item/item\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n  itemList: Item[];\n  observItemList = new Observable<Item[]>((itemList) => {\n    itemList.next(this.itemList);\n  });\n\n  constructor(\n    // private httpClient: HttpClient,\n    // private hostConfigProvider: HostConfigProvider\n    ) {\n    this.itemList = [\n      {\n        id: '0',\n        title: 'Card 1',\n        imgLink: '',\n        text: 'Example text and Example text and some other bullshit'\n      },\n      {\n        id: '1',\n        title: 'Card 2',\n        imgLink: '',\n        text: 'Example text and some other bullshit'\n      },\n      {\n        id: '2',\n        title: 'Card 3',\n        imgLink: '',\n        text: 'Example text'\n      },\n      {\n        id: '3',\n        title: 'Card 4',\n        imgLink: '',\n        text: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.'\n      },\n      {\n        id: '4',\n        title: 'Card 5',\n        imgLink: 'https://64.media.tumblr.com/e73481c38be53f4bb72d4dc3433f4acb/df1246eb1737c150-bd/s1280x1920/8e6a716dce95dbc99359251e18522fb1cd2fd588.jpg',\n        text: 'Example text and you will see about Example text and some other bullshit ne?'\n      },\n      {\n        id: '5',\n        title: 'Card 6',\n        imgLink: '',\n        text: 'Almost before we knew it, we had left the ground.'\n      },\n      {\n        id: '5',\n        title: 'Card 7',\n        text: 'Almost before we knew it, we had left the ground.'\n      },\n      {\n        id: '3',\n        title: 'Card 8',\n        text: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.'\n      },\n    ];\n  }\n\n  addPost(item: Item): string{\n    item.id = 'iuwbfiuwefiini';\n    console.log('ADD POST: ', item);\n    return \"dwqdihqfqasdo8uzk\";\n  }\n\n  deletePost(id: string): boolean{\n    console.log('DELETE POST: ', id)\n    return true\n  }\n\n  editPost(id: string, newItem: Item): boolean{\n    newItem.id = id;\n    if(this.deletePost(id)){\n      if(this.addPost(newItem)){\n        console.log('EDITED POST: ', id)\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllPosts(){\n    return this.observItemList;\n  }\n\n  getPostById(id:string): Item{\n    let tempItem = {} as Item;\n    this.getAllPosts().subscribe((itemList) =>{\n      tempItem = this.itemList.find((item)=> item.id === id);\n    });\n    return tempItem;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class HostConfigProvider {\n\n  private config: HostConfig = {\n    apiUrl: undefined\n  };\n\n\n  constructor(private httpClient: HttpClient) {\n  }\n  getApiUrl(): string {\n    return this.config.apiUrl;\n  }\n\n  async loadConfig(): Promise<void> {\n    const jsonFile = '/assets/config.json';\n    this.config = await this.httpClient.get<HostConfig>(jsonFile).toPromise();\n  }\n}\n\ninterface HostConfig {\n  apiUrl: string;\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n  filterValue = new BehaviorSubject<string>('');\n\n  constructor() { }\n\n  applyFilter(filter: string) {\n    this.filter.next(filter);\n  }\n\n  get filter() {\n    return this.filterValue;\n  }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\nconst ALLOWED_TYPE = 'image'\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n\n  @Output() onFileUploaded = new EventEmitter<File>();\n  fileName = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onFileSelected(event) {\n    const file:File = event.target.files[0];\n    if (file.type.split(\"/\")[0] === ALLOWED_TYPE) {\n      this.fileName = file.name;\n      this.onFileUploaded.emit(file);\n    }\n  }\n}\n","<input type=\"file\" class=\"file-input d-none\"\n       (change)=\"onFileSelected($event)\" #fileUpload>\n<div class=\"file-upload\">\n\n  <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n          (click)=\"fileUpload.click()\">\n    <mat-icon>attach_file</mat-icon>\n  </button>\n\n  {{fileName || \"Select an Image\"}}\n\n</div>\n","import {Component, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'unARTig';\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-3\" *ngFor=\"let col of getColumns((this.itemList) | filterItem: filter)\">\n      <div class=\"row\" *ngFor=\"let item of col\">\n        <div class=\"col\" style=\"padding: 2px;\">\n          <app-content-item [item]=\"item\"></app-content-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Item} from \"../content-item/item\";\nimport {PinboardService} from \"./pinboard.service\";\nimport {FilterService} from \"../providers/filter.service\";\n\n\nconst NUMBER_OF_COLUMNS = 4;\n\n@Component({\n  selector: 'app-pinboard',\n  templateUrl: './pinboard.component.html',\n  styleUrls: ['./pinboard.component.scss']\n})\nexport class PinboardComponent implements OnInit {\n  filter: string;\n  itemList: Item[];\n\n  constructor(\n    private pinboardService: PinboardService,\n    private filterService: FilterService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getItemListFromApi();\n    this.filterService.filter.subscribe((filterValue) =>{\n      this.filter = filterValue;\n    });\n  }\n\n  getItemById(id: string): Item {\n    let item = {} as Item;\n    this.pinboardService.getContentItems().subscribe((receivedItemList: Item[]) => {\n      receivedItemList.forEach((receivedItem: Item) => {\n        if (receivedItem.id === id) {\n          item = receivedItem;\n        }\n      })\n    });\n    return item;\n  }\n\n  getItemListFromApi(): void {\n    this.pinboardService.getContentItems().subscribe((receivedItemList: Item[]) => {\n      this.itemList = receivedItemList;\n    })\n  }\n\n  rowCount(): number {\n    let rowCount = 0;\n    this.itemList.forEach((item: Item) => {\n      rowCount++;\n    });\n    rowCount = Math.round((rowCount / NUMBER_OF_COLUMNS));\n    return rowCount;\n  }\n\n  getRows(): Array<Item[]> {\n    let itemsInRows = new Array<Item[]>();\n    for (let rowNumber = 0; rowNumber < this.rowCount(); rowNumber++) {\n      itemsInRows.push(this.getRow(rowNumber));\n    }\n    return itemsInRows;\n  }\n\n  getRow(rowNumber: number): Item[]{\n    let row = [] as Item[];\n    for (let colNumber = 0; colNumber < NUMBER_OF_COLUMNS; colNumber++) {\n      if (!!this.itemList[(rowNumber * 4) + colNumber]) {\n        row.push(this.itemList[(rowNumber * 4) + colNumber]);\n      }\n    }\n    return row;\n  }\n\n  getColumns(itemList: Item[]):Array<Item[]>{\n    let itemsInColumns = new Array<Item[]>();\n    for (let colNumber = 0; colNumber < NUMBER_OF_COLUMNS; colNumber++) {\n      itemsInColumns.push(this.getColumn(itemList, colNumber));\n    }\n    return itemsInColumns;\n  }\n\n  getColumn(itemList: Item[],colNumber: number): Item[]{\n    let col = [] as Item[];\n    for (let rowNumber = 0; rowNumber < this.rowCount(); rowNumber++) {\n      if (!!itemList[(rowNumber * 4) + colNumber]) {\n        col.push(itemList[(rowNumber * 4) + colNumber]);\n      }\n    }\n    return col;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentItemComponent } from './content-item/content-item.component';\nimport { PinboardComponent } from './pinboard/pinboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {HostConfigProvider} from \"./providers/host-config.rovider\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { LoginComponent } from './login/login.component';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { RouterModule} from \"@angular/router\";\nimport {AuthService} from \"./providers/auth.service\";\nimport {AuthGuard} from \"./providers/auth.guard\";\nimport { CreateContentItemComponent } from './create-content-item/create-content-item.component';\nimport { FilterItemPipe } from './pinboard/filter-item.pipe';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\n\nexport function configFactory(hostConfigProvider: HostConfigProvider) {\n  return () => hostConfigProvider.loadConfig();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentItemComponent,\n    PinboardComponent,\n    HeaderComponent,\n    LoginComponent,\n    CreateContentItemComponent,\n    FilterItemPipe,\n    FileUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    HttpClientModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: configFactory,\n      deps: [HostConfigProvider],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {AuthService} from \"../providers/auth.service\";\nimport {FormControl} from \"@angular/forms\";\nimport {FilterService} from \"../providers/filter.service\";\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private filterService: FilterService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  applyFilter(filter: string): void{\n    this.filterService.applyFilter(filter);\n  }\n\n  performLogout(): void {\n    if(!this.authService.logout()){\n      this.authService.goToLoginPage();\n    }\n  }\n\n  loggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n}\n","<header>\n  <div class=\"header-bar fixed-top\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col justify-content-center\">\n          <div class=\"row align-items-center\">\n            <a class=\"logo\" [routerLink]=\"['']\">\n              <img src=\"assets/images/logo_M.png\" alt=\"M\">\n            </a>\n            <form>\n              <mat-form-field>\n                <mat-label>Search</mat-label>\n                <input matInput placeholder=\"Type something...\" #startWith (keyup)=\"applyFilter(startWith.value)\">\n                <mat-icon matSuffix style=\"cursor: pointer;\" [hidden]=\"startWith.value === ''\"\n                          (click)=\"startWith.form.reset(); applyFilter('');\">backspace icon\n                </mat-icon>\n              </mat-form-field>\n            </form>\n          </div>\n        </div>\n        <div class=\"\">\n          <div class=\"row align-items-center justify-content-end\">\n            <a mat-button color=\"primary\" [routerLink]=\"['new']\" [hidden]=\"!loggedIn()\">\n              <mat-icon>\n                edit\n              </mat-icon>\n            </a>\n            <button mat-button color=\"primary\" (click)=\"performLogout()\">\n              <mat-icon [hidden]=\"!loggedIn()\">\n                lock\n              </mat-icon>\n              <a [hidden]=\"loggedIn()\">Log In</a>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n","import {Injectable} from '@angular/core';\n// import {HttpClient} from \"@angular/common/http\";\n// import {HostConfigProvider} from \"../providers/host-config.rovider\";\nimport {Observable} from \"rxjs\";\nimport {Item} from \"../content-item/item\";\nimport {BackendService} from \"../providers/backend.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PinboardService {\n  itemList: Item[];\n\n  constructor(\n    private backendService: BackendService\n  ) {\n\n  }\n\n  public getContentItems(): Observable<Item[]>{\n    return this.backendService.getAllPosts();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {BackendService} from \"../providers/backend.service\";\nimport {Item} from \"../content-item/item\";\n\n@Component({\n  selector: 'app-create-content-item',\n  templateUrl: './create-content-item.component.html',\n  styleUrls: ['./create-content-item.component.scss']\n})\nexport class CreateContentItemComponent implements OnInit {\n  title = new FormControl();\n  text = new FormControl();\n  fileAsString: string;\n\n  constructor(\n    private backendService: BackendService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fileUploaded(file: File) {\n    console.log(file);\n    this.fileAsString = this.getBase64(file);\n  }\n\n  createNewPost(){\n    const item = {} as Item;\n    item.id='';\n    item.title = this.text.value;\n    item.text = this.text.value;\n    item.imgLink = this.fileAsString;\n    this.backendService.addPost(item);\n  }\n  getBase64(file): string {\n    let me = this;\n    let reader = new FileReader();\n    let fileAsString: string = '';\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      fileAsString = reader.result as string;\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n      return '';\n    };\n    return fileAsString;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-2\"></div>\n    <div class=\"col-8 login-field align-items-center \">\n      <div class=\"row\">\n        <h3 class=\"tab-header-custom\">\n          Add New Post\n        </h3>\n      </div>\n      <form>\n        <div class=\"row justify-content-center\">\n          <mat-form-field>\n            <mat-label>Title</mat-label>\n            <input matInput placeholder=\"Enter Title here\" [formControl]=\"title\">\n          </mat-form-field>\n        </div>\n        <div class=\"row justify-content-center\">\n          <mat-form-field>\n            <textarea matInput rows=\"5\" placeholder=\"Content Text\" [formControl]=\"text\"></textarea>\n          </mat-form-field>\n        </div>\n        <div class=\"row justify-content-start\">\n          <app-file-upload (onFileUploaded)=\"fileUploaded($event)\"></app-file-upload>\n        </div>\n        <div class=\"row justify-content-end\" style=\"padding-top: 20px;\">\n          <button mat-button color=\"primary\" (click)=\"createNewPost()\" >\n            Create Post\n          </button>\n        </div>\n      </form>\n    </div>\n    <div class=\"col-2\"></div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PinboardComponent} from \"./pinboard/pinboard.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {AuthGuard} from \"./providers/auth.guard\";\nimport {CreateContentItemComponent} from \"./create-content-item/create-content-item.component\";\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '', component: PinboardComponent},\n  {path: 'new', component: CreateContentItemComponent, canActivate: [AuthGuard]},\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../providers/auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username = new FormControl();\n  password = new FormControl();\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  performLogin() {\n    if(this.checkLogin()){\n      this.router.navigate(['new']);\n    } else {\n      this.warn();\n    }\n  }\n  checkLogin(): boolean{\n    return this.authService.login(\n      this.username.value,\n      this.password.value\n    );\n  }\n\n  private warn() {\n    this.username.setErrors(Validators.required);\n    this.password.setErrors(Validators.required);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\"></div>\n    <div class=\"col login-field align-items-center \">\n      <form>\n        <div class=\"row justify-content-center\">\n          <mat-form-field>\n            <input matInput placeholder=\"Username\" [formControl]=\"username\" #UserName>\n            <mat-icon matSuffix style=\"cursor: pointer;\" [hidden]=\"UserName.value === ''\" (click)=\"UserName.value = ''\">\n              backspace icon\n            </mat-icon>\n          </mat-form-field>\n        </div>\n        <div class=\"row justify-content-center\">\n          <mat-form-field>\n            <input matInput type=\"password\" placeholder=\"Password\" [formControl]=\"password\" #Password>\n            <mat-icon matSuffix style=\"cursor: pointer;\" [hidden]=\"Password.value === ''\" (click)=\"Password.value = ''\">\n              backspace icon\n            </mat-icon>\n          </mat-form-field>\n        </div>\n        <div class=\"row justify-content-center\">\n          <button mat-button color=\"primary\" (click)=\"performLogin()\">\n            <mat-icon>lock_opened</mat-icon>\n          </button>\n        </div>\n      </form>\n    </div>\n    <div class=\"col\"></div>\n  </div>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Item} from \"../content-item/item\";\n\n@Pipe({\n  name: 'filterItem'\n})\nexport class FilterItemPipe implements PipeTransform {\n\n  transform(itemList: Item[], filterValue: string): Item[] {\n    if(!(filterValue === '')){\n      filterValue = filterValue.toLowerCase();\n      return itemList.filter((item) => (item.title.toLowerCase().includes(filterValue)) || (item.text.toLowerCase().includes(filterValue)));\n    }\n    return itemList;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}