{"version":3,"file":"ngx-image-compress.js","sources":["../../../projects/ngx-image-compress/src/lib/DOC_ORIENTATION.ts","../../../projects/ngx-image-compress/src/lib/image-compress.ts","../../../projects/ngx-image-compress/src/lib/ngx-image-compress.service.ts"],"names":[],"mappings":"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","sourcesContent":["export enum DOC_ORIENTATION {\n  Up = 1,\n  Down = 3,\n  Right = 6,\n  Left = 8,\n  UpMirrored = 2,\n  DownMirrored = 4,\n  LeftMirrored = 5,\n  RightMirrored = 7,\n  NotJpeg = -1,\n  NotDefined = -2\n}\n","import {Renderer2} from '@angular/core';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\nexport class ImageCompress {\n\n\n  /**\n   * Get the correct Orientation value from tags, in order to write correctly in our canvas\n   */\n  static getOrientation(file: File, callback: (result: DOC_ORIENTATION) => void) {\n    const reader = new FileReader();\n    try {\n      reader.onload = function ($event) {\n        const view = new DataView(reader.result as ArrayBuffer);\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2);\n        }\n        const length = view.byteLength;\n        let offset = 2;\n        while (offset < length) {\n          const marker = view.getUint16(offset, false);\n          offset += 2;\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1);\n            }\n            const little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            const tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break;\n          } else {\n            offset += view.getUint16(offset, false);\n          }\n        }\n        return callback(-1);\n      };\n      reader.readAsArrayBuffer(file);\n    } catch (e) {\n      return callback(0);\n    }\n\n  }\n\n\n  /**\n   * return a promise with the new image data and image orientation\n   */\n  static uploadFile(render: Renderer2): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n\n    const promise: Promise<{ image: string, orientation: DOC_ORIENTATION }> = new Promise(function (resolve, reject) {\n\n      const inputElement = render.createElement('input');\n      // should be fix the problem for safari/ios\n      document.getElementsByTagName('body')?.[0]?.append(inputElement);\n      render.setStyle(inputElement, 'display', 'none');\n      render.setProperty(inputElement, 'type', 'file');\n      render.setProperty(inputElement, 'accept', 'image/*');\n\n      render.listen(inputElement, 'click', ($event) => {\n        // console.log('MouseEvent:', $event);\n        // console.log('Input:', $event.target);\n        $event.target.value = null;\n      });\n\n\n      render.listen(inputElement, 'change', ($event) => {\n        const file: File = $event.target.files[0];\n\n        const myReader: FileReader = new FileReader();\n\n        myReader.onloadend = (e) => {\n          try {\n            ImageCompress.getOrientation(file, orientation => {\n              resolve({image: myReader.result as string, orientation});\n            });\n          } catch (e) {\n            // console.log(`ngx-image-compress error ${e}`);\n            reject(e);\n          }\n        };\n\n        try {\n          myReader.readAsDataURL(file);\n        } catch (e) {\n          console.warn(`ngx-image-compress - probably no file have been selected: ${e}`);\n          reject('No file selected');\n        }\n\n      });\n      inputElement.click();\n\n    });\n\n    return promise;\n  }\n\n\n  static compress(imageDataUrlSource: string,\n                  orientation: DOC_ORIENTATION,\n                  render: Renderer2,\n                  ratio: number = 50,\n                  quality: number = 50): Promise<string> {\n\n    const promise: Promise<string> = new Promise(function (resolve, reject) {\n\n      quality = quality / 100;\n      ratio = ratio / 100;\n      const sourceImage = new Image();\n\n      // important for safari: we need to wait for onload event\n      sourceImage.onload = function () {\n        const canvas: HTMLCanvasElement = render.createElement('canvas');\n        const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n\n        let w, h;\n        w = sourceImage.naturalWidth;\n        h = sourceImage.naturalHeight;\n\n        if (orientation === DOC_ORIENTATION.Right || orientation === DOC_ORIENTATION.Left) {\n          const t = w;\n          w = h;\n          h = t;\n        }\n\n        canvas.width = w * ratio;\n        canvas.height = h * ratio;\n\n\n        const TO_RADIANS = Math.PI / 180;\n\n        if (orientation === DOC_ORIENTATION.Up) {\n\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n\n        } else if (orientation === DOC_ORIENTATION.Right) {\n\n          ctx.save();\n          ctx.rotate(90 * TO_RADIANS);\n          ctx.translate(0, -canvas.width);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Left) {\n\n          ctx.save();\n          ctx.rotate(-90 * TO_RADIANS);\n          ctx.translate(-canvas.width, 0);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Down) {\n\n          ctx.save();\n          ctx.rotate(180 * TO_RADIANS);\n          ctx.translate(-canvas.width, -canvas.height);\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n          ctx.restore();\n\n        } else {\n          // console.warn('ngx-image-compress - no orientation value found');\n          // same as default UP\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n        }\n\n\n        const mime = imageDataUrlSource.substr(5, imageDataUrlSource.split(';')[0].length - 5);\n        // TODO test on mime\n        const result = canvas.toDataURL(mime, quality);\n\n        resolve(result);\n\n      };\n\n      sourceImage.src = imageDataUrlSource;\n\n    });\n\n    return promise;\n  }\n\n\n  /**\n   * helper to evaluate the compression rate\n   * @param s the image in base64 string format\n   */\n  static byteCount(s: string): number {\n    return encodeURI(s).split(/%..|./).length - 1;\n  }\n\n}\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {ImageCompress} from './image-compress';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\n@Injectable()\nexport class NgxImageCompressService {\n\n  private render: Renderer2;\n\n  public DOC_ORIENTATION = DOC_ORIENTATION;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.render = rendererFactory.createRenderer(null, null);\n  }\n\n  public byteCount(image) {\n    return ImageCompress.byteCount(image);\n  }\n\n  /** Get the correct Orientation value from the EXIF tags in the specified file. */\n  public getOrientation(file: File): Promise<DOC_ORIENTATION> {\n    return new Promise<DOC_ORIENTATION>((resolve) => {\n      ImageCompress.getOrientation(file, (result) => {\n        resolve(result);\n      });\n    });\n  }\n\n  public uploadFile(): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n    return ImageCompress.uploadFile(this.render);\n  }\n\n  public compressFile(image: string, orientation: DOC_ORIENTATION, ratio: number = 50, quality: number = 50): Promise<string> {\n    return ImageCompress.compress(image, orientation, this.render, ratio, quality);\n  }\n\n}\n"]}