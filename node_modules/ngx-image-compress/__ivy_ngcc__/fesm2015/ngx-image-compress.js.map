{"version":3,"file":"ngx-image-compress.js","sources":["../../../projects/ngx-image-compress/src/lib/DOC_ORIENTATION.ts","../../../projects/ngx-image-compress/src/lib/image-compress.ts","../../../projects/ngx-image-compress/src/lib/ngx-image-compress.service.ts"],"names":[],"mappings":"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","sourcesContent":["export enum DOC_ORIENTATION {\n  Up = 1,\n  Down = 3,\n  Right = 6,\n  Left = 8,\n  UpMirrored = 2,\n  DownMirrored = 4,\n  LeftMirrored = 5,\n  RightMirrored = 7,\n  NotJpeg = -1,\n  NotDefined = -2\n}\n","import {Renderer2} from '@angular/core';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\nexport class ImageCompress {\n\n\n  /**\n   * Get the correct Orientation value from tags, in order to write correctly in our canvas\n   */\n  static getOrientation(file: File, callback: (result: DOC_ORIENTATION) => void) {\n    const reader = new FileReader();\n    try {\n      reader.onload = function ($event) {\n        const view = new DataView(reader.result as ArrayBuffer);\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2);\n        }\n        const length = view.byteLength;\n        let offset = 2;\n        while (offset < length) {\n          const marker = view.getUint16(offset, false);\n          offset += 2;\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1);\n            }\n            const little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            const tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break;\n          } else {\n            offset += view.getUint16(offset, false);\n          }\n        }\n        return callback(-1);\n      };\n      reader.readAsArrayBuffer(file);\n    } catch (e) {\n      return callback(0);\n    }\n\n  }\n\n\n  /**\n   * return a promise with the new image data and image orientation\n   */\n  static uploadFile(render: Renderer2): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n\n    const promise: Promise<{ image: string, orientation: DOC_ORIENTATION }> = new Promise(function (resolve, reject) {\n\n      const inputElement = render.createElement('input');\n      // should be fix the problem for safari/ios\n      document.getElementsByTagName('body')?.[0]?.append(inputElement);\n      render.setStyle(inputElement, 'display', 'none');\n      render.setProperty(inputElement, 'type', 'file');\n      render.setProperty(inputElement, 'accept', 'image/*');\n\n      render.listen(inputElement, 'click', ($event) => {\n        // console.log('MouseEvent:', $event);\n        // console.log('Input:', $event.target);\n        $event.target.value = null;\n      });\n\n\n      render.listen(inputElement, 'change', ($event) => {\n        const file: File = $event.target.files[0];\n\n        const myReader: FileReader = new FileReader();\n\n        myReader.onloadend = (e) => {\n          try {\n            ImageCompress.getOrientation(file, orientation => {\n              resolve({image: myReader.result as string, orientation});\n            });\n          } catch (e) {\n            // console.log(`ngx-image-compress error ${e}`);\n            reject(e);\n          }\n        };\n\n        try {\n          myReader.readAsDataURL(file);\n        } catch (e) {\n          console.warn(`ngx-image-compress - probably no file have been selected: ${e}`);\n          reject('No file selected');\n        }\n\n      });\n      inputElement.click();\n\n    });\n\n    return promise;\n  }\n\n\n  static compress(imageDataUrlSource: string,\n                  orientation: DOC_ORIENTATION,\n                  render: Renderer2,\n                  ratio: number = 50,\n                  quality: number = 50): Promise<string> {\n\n    const promise: Promise<string> = new Promise(function (resolve, reject) {\n\n      quality = quality / 100;\n      ratio = ratio / 100;\n      const sourceImage = new Image();\n\n      // important for safari: we need to wait for onload event\n      sourceImage.onload = function () {\n        const canvas: HTMLCanvasElement = render.createElement('canvas');\n        const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n\n        let w, h;\n        w = sourceImage.naturalWidth;\n        h = sourceImage.naturalHeight;\n\n        if (orientation === DOC_ORIENTATION.Right || orientation === DOC_ORIENTATION.Left) {\n          const t = w;\n          w = h;\n          h = t;\n        }\n\n        canvas.width = w * ratio;\n        canvas.height = h * ratio;\n\n\n        const TO_RADIANS = Math.PI / 180;\n\n        if (orientation === DOC_ORIENTATION.Up) {\n\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n\n        } else if (orientation === DOC_ORIENTATION.Right) {\n\n          ctx.save();\n          ctx.rotate(90 * TO_RADIANS);\n          ctx.translate(0, -canvas.width);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Left) {\n\n          ctx.save();\n          ctx.rotate(-90 * TO_RADIANS);\n          ctx.translate(-canvas.width, 0);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Down) {\n\n          ctx.save();\n          ctx.rotate(180 * TO_RADIANS);\n          ctx.translate(-canvas.width, -canvas.height);\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n          ctx.restore();\n\n        } else {\n          // console.warn('ngx-image-compress - no orientation value found');\n          // same as default UP\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n        }\n\n\n        const mime = imageDataUrlSource.substr(5, imageDataUrlSource.split(';')[0].length - 5);\n        // TODO test on mime\n        const result = canvas.toDataURL(mime, quality);\n\n        resolve(result);\n\n      };\n\n      sourceImage.src = imageDataUrlSource;\n\n    });\n\n    return promise;\n  }\n\n\n  /**\n   * helper to evaluate the compression rate\n   * @param s the image in base64 string format\n   */\n  static byteCount(s: string): number {\n    return encodeURI(s).split(/%..|./).length - 1;\n  }\n\n}\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {ImageCompress} from './image-compress';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\n@Injectable()\nexport class NgxImageCompressService {\n\n  private render: Renderer2;\n\n  public DOC_ORIENTATION = DOC_ORIENTATION;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.render = rendererFactory.createRenderer(null, null);\n  }\n\n  public byteCount(image) {\n    return ImageCompress.byteCount(image);\n  }\n\n  /** Get the correct Orientation value from the EXIF tags in the specified file. */\n  public getOrientation(file: File): Promise<DOC_ORIENTATION> {\n    return new Promise<DOC_ORIENTATION>((resolve) => {\n      ImageCompress.getOrientation(file, (result) => {\n        resolve(result);\n      });\n    });\n  }\n\n  public uploadFile(): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n    return ImageCompress.uploadFile(this.render);\n  }\n\n  public compressFile(image: string, orientation: DOC_ORIENTATION, ratio: number = 50, quality: number = 50): Promise<string> {\n    return ImageCompress.compress(image, orientation, this.render, ratio, quality);\n  }\n\n}\n"]}