{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-image-compress\";\nimport * as i2 from \"@angular/fire/compat/storage\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nconst ALLOWED_TYPE = 'image';\nexport let FileUploadComponent = /*#__PURE__*/(() => {\n  class FileUploadComponent {\n    constructor(imageCompress, afStorage) {\n      this.imageCompress = imageCompress;\n      this.afStorage = afStorage;\n      this.text = 'Select an Image'; // @Output() onFileUploaded = new EventEmitter<string | ArrayBuffer>();\n\n      this.onFileUploaded = new EventEmitter();\n      this.onFileReading = new EventEmitter();\n      this.fileName = '';\n    }\n\n    ngOnInit() {}\n\n    onFileSelected(event) {\n      this.onFileReading.emit(true);\n      const id = Math.random().toString(36).substring(2);\n      this.ref = this.afStorage.ref(id);\n      const file = event.target.files[0];\n      this.task = this.ref.put(file);\n      this.uploadProgress = this.task.percentageChanges();\n      this.task.then(a => {\n        a.ref.getDownloadURL().then(link => {\n          this.onFileUploaded.emit(link);\n          this.onFileReading.emit(false);\n        });\n      }); // if (file.type.split(\"/\")[0] === ALLOWED_TYPE) {\n      //   this.fileName = file.name;\n      //   this.getBase64(file);\n      // }\n    } //TODO: DOES NOT WORK PROPERLY\n\n\n    getBase64(file) {\n      let reader = new FileReader();\n      let fileAsString;\n      this.onFileReading.emit(true); // reader.readAsArrayBuffer(file);\n\n      reader.readAsDataURL(file);\n\n      reader.onloadend = () => {\n        this.imageCompress.compressFile(reader.result.toString(), -1, 50, 50).then(result => {\n          this.onFileUploaded.emit(result);\n        });\n        this.onFileReading.emit(false);\n      };\n\n      reader.onerror = error => {\n        console.log('Error: ', error);\n        return false;\n      };\n\n      return true;\n    }\n\n    clearFileUpload() {\n      this.fileName = '';\n      this.text = 'Cleared!';\n      this.onFileUploaded.emit('');\n    }\n\n  }\n\n  FileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n    return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.NgxImageCompressService), i0.ɵɵdirectiveInject(i2.AngularFireStorage));\n  };\n\n  FileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileUploadComponent,\n    selectors: [[\"app-file-upload\"]],\n    inputs: {\n      text: \"text\"\n    },\n    outputs: {\n      onFileUploaded: \"onFileUploaded\",\n      onFileReading: \"onFileReading\"\n    },\n    decls: 10,\n    vars: 1,\n    consts: [[\"type\", \"file\", 1, \"file-input\", \"d-none\", 3, \"change\"], [\"fileUpload\", \"\"], [1, \"file-upload\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 1, \"upload-btn\", 3, \"click\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"20px\", 3, \"click\"]],\n    template: function FileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_0_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return _r0.click();\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"attach_file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_7_listener() {\n          return ctx.clearFileUpload();\n        });\n        i0.ɵɵelementStart(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.fileName || ctx.text, \" \");\n      }\n    },\n    directives: [i3.MatButton, i4.MatIcon],\n    styles: [\"\"]\n  });\n  return FileUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}