{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nconst ALLOWED_TYPE = 'image';\nlet FileUploadComponent = class FileUploadComponent {\n  constructor(imageCompress, afStorage) {\n    this.imageCompress = imageCompress;\n    this.afStorage = afStorage;\n    this.text = \"Select an Image\"; // @Output() onFileUploaded = new EventEmitter<string | ArrayBuffer>();\n\n    this.onFileUploaded = new EventEmitter();\n    this.onFileReading = new EventEmitter();\n    this.fileName = '';\n  }\n\n  ngOnInit() {}\n\n  onFileSelected(event) {\n    this.onFileReading.emit(true);\n    const id = Math.random().toString(36).substring(2);\n    this.ref = this.afStorage.ref(id);\n    const file = event.target.files[0];\n    this.task = this.ref.put(file);\n    this.uploadProgress = this.task.percentageChanges();\n    this.task.then(a => {\n      a.ref.getDownloadURL().then(link => {\n        this.onFileUploaded.emit(link);\n        this.onFileReading.emit(false);\n      });\n    }); // if (file.type.split(\"/\")[0] === ALLOWED_TYPE) {\n    //   this.fileName = file.name;\n    //   this.getBase64(file);\n    // }\n  } //TODO: DOES NOT WORK PROPERLY\n\n\n  getBase64(file) {\n    let reader = new FileReader();\n    let fileAsString;\n    this.onFileReading.emit(true); // reader.readAsArrayBuffer(file);\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      this.imageCompress.compressFile(reader.result.toString(), -1, 50, 50).then(result => {\n        this.onFileUploaded.emit(result);\n      });\n      this.onFileReading.emit(false);\n    };\n\n    reader.onerror = error => {\n      console.log('Error: ', error);\n      return false;\n    };\n\n    return true;\n  }\n\n  clearFileUpload() {\n    this.fileName = '';\n    this.text = 'Cleared!';\n    this.onFileUploaded.emit('');\n  }\n\n};\n\n__decorate([Input()], FileUploadComponent.prototype, \"text\", void 0);\n\n__decorate([Output()], FileUploadComponent.prototype, \"onFileUploaded\", void 0);\n\n__decorate([Output()], FileUploadComponent.prototype, \"onFileReading\", void 0);\n\nFileUploadComponent = __decorate([Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})], FileUploadComponent);\nexport { FileUploadComponent };","map":null,"metadata":{},"sourceType":"module"}