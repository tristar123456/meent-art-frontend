{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./host-config.provider\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nconst TOKEN_KEY = 'token';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(configProvider, httpClient, router) {\n      this.configProvider = configProvider;\n      this.httpClient = httpClient;\n      this.router = router;\n      this.isAuthenticated = this.getToken() !== '';\n    }\n\n    authenticate(username, password) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const token = yield this.login({\n          username,\n          password\n        });\n\n        if (token) {\n          localStorage.setItem(TOKEN_KEY, token);\n          this.isAuthenticated = true;\n        }\n\n        return token;\n      });\n    }\n\n    login(user) {\n      return __awaiter(this, void 0, void 0, function* () {\n        // firebase.auth().signInWithEmailAndPassword(user.username, user.password)\n        //   .then((userCredential) => {\n        //     // Signed in\n        //     const fUser = userCredential.user;\n        //     console.log('fUser');\n        //     // ...\n        //   })\n        //   .catch((error) => {\n        //     const errorCode = error.code;\n        //     const errorMessage = error.message;\n        //     console.log(error);\n        //   });\n        return yield this.httpClient.post(this.configProvider.getApiUrl() + '/user/login', {\n          username: user.username,\n          password: user.password\n        }, {\n          responseType: 'json'\n        }).toPromise();\n      });\n    }\n\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.httpClient.post(this.configProvider.getApiUrl() + '/user/logout', {}, {\n          responseType: 'json'\n        }).toPromise().then(done => {\n          localStorage.removeItem(TOKEN_KEY);\n          this.isAuthenticated = false;\n          this.router.navigate(['login']);\n        }, error => {\n          console.log(error);\n        });\n      });\n    }\n\n    isLoggedIn() {\n      return this.isAuthenticated;\n    }\n\n    getToken() {\n      if (!!localStorage.getItem(TOKEN_KEY)) {\n        return localStorage.getItem(TOKEN_KEY);\n      } else {\n        return '';\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HostConfigProvider), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}