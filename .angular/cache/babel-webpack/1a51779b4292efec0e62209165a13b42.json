{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./pinboard.service\";\nimport * as i2 from \"../providers/filter.service\";\nimport * as i3 from \"../size-detector/resize.service\";\n\nfunction PinboardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PinboardComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"app-content-item\", 9);\n    i0.ɵɵlistener(\"newItems\", function PinboardComponent_div_3_div_1_Template_app_content_item_newItems_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.fetchList();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"item\", item_r4);\n  }\n}\n\nfunction PinboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, PinboardComponent_div_3_div_1_Template, 3, 1, \"div\", 7);\n    i0.ɵɵpipe(2, \"filterItem\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, col_r2, ctx_r1.filter));\n  }\n}\n\nexport let PinboardComponent = /*#__PURE__*/(() => {\n  class PinboardComponent {\n    constructor(pinboardService, filterService, resizeSvc) {\n      this.pinboardService = pinboardService;\n      this.filterService = filterService;\n      this.resizeSvc = resizeSvc;\n      this.numberOfColumns = 4;\n      this.loadingContent = true;\n      this.loadingContentFinished = false;\n      this.size = this.resizeSvc.current;\n\n      if (this.size < 4) {\n        this.numberOfColumns = this.size + 1;\n      } else {\n        this.numberOfColumns = 4;\n      }\n\n      this.fetchList();\n    }\n\n    ngOnInit() {\n      this.resizeSvc.onResize$.subscribe(x => {\n        this.size = x;\n\n        if (x < 4) {\n          this.numberOfColumns = x + 1;\n          this.colList = this.getColumns(this.itemList);\n        } else {\n          this.numberOfColumns = 4;\n          this.colList = this.getColumns(this.itemList);\n        }\n      });\n    }\n\n    fetchList() {\n      this.getItemListFromApi();\n      this.filterService.filter.subscribe(filterValue => {\n        this.filter = filterValue;\n      });\n    }\n\n    getItemListFromApi() {\n      this.pinboardService.getContentItems().subscribe(receivedItemList => {\n        this.itemList = receivedItemList;\n        this.itemList = this.itemList.reverse();\n        this.colList = this.getColumns(this.itemList);\n        this.loadingContent = false;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    getItemById(id) {\n      let item = {};\n      this.pinboardService.getContentItem(id).subscribe(receivedItem => {\n        item = receivedItem;\n      }, error => {\n        console.log(error);\n      });\n      return item;\n    }\n\n    rowCount() {\n      let rowCount = 0;\n\n      if (!!this.itemList) {\n        this.itemList.forEach(item => {\n          rowCount++;\n        });\n        rowCount = Math.round(rowCount / this.numberOfColumns + 1);\n      }\n\n      return rowCount;\n    }\n\n    getRows() {\n      const itemsInRows = new Array();\n\n      for (let rowNumber = 0; rowNumber < this.rowCount(); rowNumber++) {\n        itemsInRows.push(this.getRow(rowNumber));\n      }\n\n      return itemsInRows;\n    }\n\n    getRow(rowNumber) {\n      const row = [];\n\n      for (let colNumber = 0; colNumber < this.numberOfColumns; colNumber++) {\n        if (!!this.itemList[rowNumber * 4 + colNumber]) {\n          row.push(this.itemList[rowNumber * 4 + colNumber]);\n        }\n      }\n\n      return row;\n    }\n\n    getColumns(itemList) {\n      const itemsInColumns = new Array();\n\n      for (let colNumber = 0; colNumber < this.numberOfColumns; colNumber++) {\n        itemsInColumns.push(this.getColumn(itemList, colNumber));\n      }\n\n      return itemsInColumns;\n    }\n\n    getColumn(itemList, colNumber) {\n      const col = [];\n\n      for (let rowNumber = 0; rowNumber < this.rowCount(); rowNumber++) {\n        if (!!itemList[rowNumber * this.numberOfColumns + colNumber]) {\n          col.push(itemList[rowNumber * this.numberOfColumns + colNumber]);\n        }\n      }\n\n      return col;\n    }\n\n  }\n\n  PinboardComponent.ɵfac = function PinboardComponent_Factory(t) {\n    return new (t || PinboardComponent)(i0.ɵɵdirectiveInject(i1.PinboardService), i0.ɵɵdirectiveInject(i2.FilterService), i0.ɵɵdirectiveInject(i3.ResizeService));\n  };\n\n  PinboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PinboardComponent,\n    selectors: [[\"app-pinboard\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [\"class\", \"col-12 align-content-center\", 4, \"ngIf\"], [\"class\", \"col-xl-3 col-lg-3 col-md-4 col-sm-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"align-content-center\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-3\", \"col-lg-3\", \"col-md-4\", \"col-sm-6\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"content-item\"], [3, \"item\", \"newItems\"]],\n    template: function PinboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, PinboardComponent_div_2_Template, 3, 0, \"div\", 2);\n        i0.ɵɵtemplate(3, PinboardComponent_div_3_Template, 3, 4, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingContent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.colList);\n      }\n    },\n    styles: [\".content-item[_ngcontent-%COMP%]{padding:6px}@media (max-width: 576px){.content-item[_ngcontent-%COMP%]{padding:0 0 4px}}\"]\n  });\n  return PinboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}