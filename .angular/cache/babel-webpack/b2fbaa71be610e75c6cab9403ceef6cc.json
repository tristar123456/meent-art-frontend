{"ast":null,"code":"import { SCREEN_SIZE } from \"./screen-size.enum\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./resize.service\";\n\nfunction SizeDetectorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    const s_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(s_r1.css + \" \" + (ctx_r0.prefix + s_r1.id));\n  }\n}\n\nexport let SizeDetectorComponent = /*#__PURE__*/(() => {\n  class SizeDetectorComponent {\n    constructor(elementRef, resizeSvc) {\n      this.elementRef = elementRef;\n      this.resizeSvc = resizeSvc;\n      this.prefix = 'is-';\n      this.sizes = [{\n        id: SCREEN_SIZE.XS,\n        name: 'xs',\n        css: `d-block d-sm-none`\n      }, {\n        id: SCREEN_SIZE.SM,\n        name: 'sm',\n        css: `d-none d-sm-block d-md-none`\n      }, {\n        id: SCREEN_SIZE.MD,\n        name: 'md',\n        css: `d-none d-md-block d-lg-none`\n      }, {\n        id: SCREEN_SIZE.LG,\n        name: 'lg',\n        css: `d-none d-lg-block d-xl-none`\n      }, {\n        id: SCREEN_SIZE.XL,\n        name: 'xl',\n        css: `d-none d-xl-block`\n      }];\n    }\n\n    onResize() {\n      this.detectScreenSize();\n    }\n\n    ngAfterViewInit() {\n      this.detectScreenSize();\n    }\n\n    detectScreenSize() {\n      const currentSize = this.sizes.find(x => {\n        // get the HTML element\n        const el = this.elementRef.nativeElement.querySelector(`.${this.prefix}${x.id}`); // check its display property value\n\n        return window.getComputedStyle(el).display != 'none';\n      });\n      this.resizeSvc.onResize(currentSize.id);\n    }\n\n  }\n\n  SizeDetectorComponent.ɵfac = function SizeDetectorComponent_Factory(t) {\n    return new (t || SizeDetectorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ResizeService));\n  };\n\n  SizeDetectorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SizeDetectorComponent,\n    selectors: [[\"app-size-detector\"]],\n    hostBindings: function SizeDetectorComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function SizeDetectorComponent_resize_HostBindingHandler() {\n          return ctx.onResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"style\", \"height: 0; width: 0;\", 3, \"class\", 4, \"ngFor\", \"ngForOf\"], [2, \"height\", \"0\", \"width\", \"0\"]],\n    template: function SizeDetectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SizeDetectorComponent_div_0_Template, 1, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.sizes);\n      }\n    },\n    styles: [\"\"]\n  });\n  return SizeDetectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}