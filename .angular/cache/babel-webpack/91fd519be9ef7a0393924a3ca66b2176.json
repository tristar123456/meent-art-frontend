{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./host-config.provider\";\nexport let BackendService = /*#__PURE__*/(() => {\n  class BackendService {\n    constructor(httpClient, hostConfigProvider) {\n      this.httpClient = httpClient;\n      this.hostConfigProvider = hostConfigProvider;\n      this.observItemList = new Observable(itemList => {\n        this.httpClient.get(this.hostConfigProvider.getApiUrl() + '/item/list').subscribe(received => {\n          itemList.next(received);\n        }, error => {\n          console.log(error);\n        });\n      });\n      this.getAllPosts();\n    }\n\n    addPost(addItem) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.httpClient.post(this.hostConfigProvider.getApiUrl() + '/item/add', {\n          addItem\n        }, {\n          responseType: 'json'\n        }).toPromise();\n      });\n    }\n\n    deletePost(deleteItem) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.httpClient.post(this.hostConfigProvider.getApiUrl() + '/item/delete', {\n          deleteItem\n        }, {\n          responseType: 'json'\n        }).toPromise();\n      });\n    }\n\n    editPost(id, editedItem) {\n      return __awaiter(this, void 0, void 0, function* () {\n        editedItem.id = id;\n        return yield this.httpClient.post(this.hostConfigProvider.getApiUrl() + '/item/edit', {\n          editedItem\n        }, {\n          responseType: 'json'\n        }).toPromise();\n      });\n    }\n\n    getAllPosts() {\n      this.observItemList.subscribe(receivedItemList => {\n        this.itemList = receivedItemList;\n      });\n      return this.observItemList;\n    }\n\n    getPostById(id) {\n      return new Observable(item => {\n        this.httpClient.get(this.hostConfigProvider.getApiUrl() + '/item/' + id).subscribe(received => {\n          item.next(received);\n        }, error => {\n          console.log(error);\n        });\n      });\n    }\n\n  }\n\n  BackendService.ɵfac = function BackendService_Factory(t) {\n    return new (t || BackendService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HostConfigProvider));\n  };\n\n  BackendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BackendService,\n    factory: BackendService.ɵfac,\n    providedIn: 'root'\n  });\n  return BackendService;\n})();","map":null,"metadata":{},"sourceType":"module"}